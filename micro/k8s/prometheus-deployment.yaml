apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: micro-app
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus  # Use a dedicated service account
      containers:
        - name: prometheus-micro
          image: localhost:5000/prometheus:latest
          ports:
            - containerPort: 9091
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.listen-address=:9091"
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: micro-app
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      # Scrape Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9091']

      # Scrape Node Exporter (system-level metrics)
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: node-exporter
            action: keep
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            regex: metrics
            action: keep

      # Scrape Kubernetes API servers
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          insecure_skip_verify: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: kubernetes
            action: keep

      # Scrape Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            target_label: instance

      # Scrape Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep

      # Scrape JVM Metrics (Example Applications)
      - job_name: 'jvm-metrics'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          # Match pods with the "app" label set to JVM apps
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: jvm-app|spring-app|java-app
            action: keep
          # Use the pod IP and specific port for scraping
          - source_labels: [__meta_kubernetes_pod_ip]
            target_label: __address__
            replacement: ${1}:8080  # Adjust the port to match your app's metrics endpoint
          # Set a custom job label
          - target_label: job
            replacement: jvm-metrics
